# System nginx configuration for bookswaps.co.ke
# This file should be copied to /etc/nginx/sites-available/bookswaps.co.ke
# and symlinked to /etc/nginx/sites-enabled/bookswaps.co.ke

# HTTP to HTTPS redirect for bookswaps.co.ke
server {
    listen 80;
    server_name bookswaps.co.ke www.bookswaps.co.ke;
    return 301 https://$server_name$request_uri;
}

# HTTPS server for bookswaps.co.ke
server {
    listen 443 ssl http2;
    server_name bookswaps.co.ke www.bookswaps.co.ke;

    ssl_certificate /etc/letsencrypt/live/bookswaps.co.ke/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bookswaps.co.ke/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # ETL API endpoints
    location /etl-api/ {
        rewrite ^/etl-api/(.*) /$1 break;
        proxy_pass http://127.0.0.1:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://etl-pipeline-snowy.vercel.app' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://etl-pipeline-snowy.vercel.app';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # ETL WebSocket
    location /etl-ws {
        rewrite ^/etl-ws$ /ws break;
        proxy_pass http://127.0.0.1:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Frontend proxy
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Backend API proxy - IMPORTANT: Keep /api/ in the proxy_pass URL
    location /api/ {
        proxy_pass http://localhost:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Serve media files directly from filesystem
    location /media/ {
        alias /opt/bookswaps/media/;
        expires 1y;
        add_header Cache-Control "public, immutable";

        # Add CORS headers for media files
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";

        # Security headers for media files
        add_header X-Content-Type-Options nosniff;

        # Only allow image files
        location ~* \.(jpg|jpeg|png|gif|webp)$ {
            try_files $uri =404;
        }
    }

    # Serve static files directly from filesystem
    location /static/ {
        alias /opt/bookswaps/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
    }
}